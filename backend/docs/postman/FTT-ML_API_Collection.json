{
  "info": {
    "name": "FTT-ML API Collection",
    "description": "Complete API collection for Financial Data Transformation Platform (FTT-ML)",
    "version": "4.1.0",
    "contact": {
      "name": "FTT-ML Support",
      "email": "support@example.com"
    }
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "file_id_a",
      "value": "file_example_123",
      "type": "string"
    },
    {
      "key": "file_id_b", 
      "value": "file_example_456",
      "type": "string"
    },
    {
      "key": "transformation_id",
      "value": "transform_example_789",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health & Status",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check API health and status"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "url": "{{base_url}}/health"
              },
              "status": "OK",
              "code": 200,
              "body": "{\n  \"status\": \"healthy\",\n  \"service\": \"ftt-ml\",\n  \"version\": \"4.1.0\",\n  \"timestamp\": \"2024-01-15T10:00:00Z\"\n}"
            }
          ]
        },
        {
          "name": "Debug Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/debug/status",
              "host": ["{{base_url}}"],
              "path": ["debug", "status"]
            },
            "description": "Get detailed system debug information"
          }
        },
        {
          "name": "Performance Metrics",
          "request": {
            "method": "GET", 
            "header": [],
            "url": {
              "raw": "{{base_url}}/performance/metrics",
              "host": ["{{base_url}}"],
              "path": ["performance", "metrics"]
            },
            "description": "Get current performance metrics"
          }
        }
      ]
    },
    {
      "name": "File Management",
      "item": [
        {
          "name": "Upload File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data",
                "disabled": true
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "/path/to/your/file.csv",
                  "description": "CSV or Excel file to upload"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/upload",
              "host": ["{{base_url}}"], 
              "path": ["upload"]
            },
            "description": "Upload a CSV or Excel file for processing"
          },
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "body": "{\n  \"success\": true,\n  \"message\": \"File uploaded successfully\",\n  \"data\": {\n    \"file_id\": \"file_abc123\",\n    \"filename\": \"customer_data.csv\",\n    \"file_size_mb\": 2.5,\n    \"total_rows\": 1000,\n    \"columns\": [\"customer_id\", \"first_name\", \"last_name\", \"email\", \"amount\"],\n    \"file_type\": \"csv\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get File Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/files/{{file_id_a}}",
              "host": ["{{base_url}}"],
              "path": ["files", "{{file_id_a}}"]
            },
            "description": "Get information about an uploaded file"
          }
        },
        {
          "name": "Preview File Data",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/files/{{file_id_a}}/preview?rows=10",
              "host": ["{{base_url}}"],
              "path": ["files", "{{file_id_a}}", "preview"],
              "query": [
                {
                  "key": "rows",
                  "value": "10",
                  "description": "Number of rows to preview"
                }
              ]
            },
            "description": "Preview the first few rows of uploaded file data"
          }
        }
      ]
    },
    {
      "name": "Data Transformation",
      "item": [
        {
          "name": "Generate AI Configuration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"requirements\": \"Transform customer data to include full name and calculate total with tax\",\n  \"source_files\": [\n    {\n      \"file_id\": \"{{file_id_a}}\",\n      \"filename\": \"customer_data.csv\",\n      \"columns\": [\"customer_id\", \"first_name\", \"last_name\", \"email\", \"amount\", \"tax_rate\"],\n      \"totalRows\": 1000\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/transformation/generate-config/",
              "host": ["{{base_url}}"],
              "path": ["transformation", "generate-config"]
            },
            "description": "Generate transformation configuration using AI"
          }
        },
        {
          "name": "Process Transformation (Preview)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type", 
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"process_name\": \"Customer Data Transformation\",\n  \"description\": \"Transform customer data with full name and totals\",\n  \"source_files\": [\n    {\n      \"file_id\": \"{{file_id_a}}\",\n      \"alias\": \"{{file_id_a}}\",\n      \"purpose\": \"Primary data source\"\n    }\n  ],\n  \"transformation_config\": {\n    \"name\": \"Customer Summary Transformation\",\n    \"description\": \"Transform customer data to include full name and calculate total with tax\",\n    \"source_files\": [\n      {\n        \"file_id\": \"{{file_id_a}}\",\n        \"alias\": \"{{file_id_a}}\",\n        \"purpose\": \"Primary data source\"\n      }\n    ],\n    \"row_generation_rules\": [\n      {\n        \"id\": \"rule_1\",\n        \"name\": \"Customer Summary\",\n        \"enabled\": true,\n        \"output_columns\": [\n          {\n            \"id\": \"col_1\",\n            \"name\": \"customer_id\",\n            \"mapping_type\": \"direct\",\n            \"source_column\": \"customer_id\"\n          },\n          {\n            \"id\": \"col_2\",\n            \"name\": \"full_name\",\n            \"mapping_type\": \"static\",\n            \"static_value\": \"{first_name} {last_name}\"\n          },\n          {\n            \"id\": \"col_3\",\n            \"name\": \"email\",\n            \"mapping_type\": \"direct\",\n            \"source_column\": \"email\"\n          },\n          {\n            \"id\": \"col_4\",\n            \"name\": \"total_with_tax\",\n            \"mapping_type\": \"static\",\n            \"static_value\": \"{amount} * (1 + {tax_rate}/100)\"\n          }\n        ],\n        \"priority\": 0\n      }\n    ],\n    \"merge_datasets\": false\n  },\n  \"preview_only\": true,\n  \"row_limit\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/transformation/process/",
              "host": ["{{base_url}}"],
              "path": ["transformation", "process"]
            },
            "description": "Process transformation in preview mode (small sample)"
          }
        },
        {
          "name": "Process Transformation (Full)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw", 
              "raw": "{\n  \"process_name\": \"Customer Data Transformation\",\n  \"description\": \"Transform customer data with full name and totals\",\n  \"source_files\": [\n    {\n      \"file_id\": \"{{file_id_a}}\",\n      \"alias\": \"{{file_id_a}}\",\n      \"purpose\": \"Primary data source\"\n    }\n  ],\n  \"transformation_config\": {\n    \"name\": \"Customer Summary Transformation\",\n    \"description\": \"Transform customer data to include full name and calculate total with tax\",\n    \"source_files\": [\n      {\n        \"file_id\": \"{{file_id_a}}\",\n        \"alias\": \"{{file_id_a}}\",\n        \"purpose\": \"Primary data source\"\n      }\n    ],\n    \"row_generation_rules\": [\n      {\n        \"id\": \"rule_1\",\n        \"name\": \"Customer Summary\",\n        \"enabled\": true,\n        \"output_columns\": [\n          {\n            \"id\": \"col_1\",\n            \"name\": \"customer_id\",\n            \"mapping_type\": \"direct\",\n            \"source_column\": \"customer_id\"\n          },\n          {\n            \"id\": \"col_2\",\n            \"name\": \"full_name\",\n            \"mapping_type\": \"static\",\n            \"static_value\": \"{first_name} {last_name}\"\n          },\n          {\n            \"id\": \"col_3\",\n            \"name\": \"email\",\n            \"mapping_type\": \"direct\",\n            \"source_column\": \"email\"\n          },\n          {\n            \"id\": \"col_4\",\n            \"name\": \"total_with_tax\",\n            \"mapping_type\": \"static\",\n            \"static_value\": \"{amount} * (1 + {tax_rate}/100)\"\n          }\n        ],\n        \"priority\": 0\n      }\n    ],\n    \"merge_datasets\": false\n  },\n  \"preview_only\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/transformation/process/",
              "host": ["{{base_url}}"],
              "path": ["transformation", "process"]
            },
            "description": "Process full transformation"
          }
        },
        {
          "name": "Get Transformation Results",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/transformation/results/{{transformation_id}}?page=1&page_size=100",
              "host": ["{{base_url}}"],
              "path": ["transformation", "results", "{{transformation_id}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size",
                  "value": "100"
                }
              ]
            },
            "description": "Get transformation results with pagination"
          }
        },
        {
          "name": "Download Transformation Results (CSV)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/transformation/download/{{transformation_id}}?format=csv",
              "host": ["{{base_url}}"],
              "path": ["transformation", "download", "{{transformation_id}}"],
              "query": [
                {
                  "key": "format",
                  "value": "csv"
                }
              ]
            },
            "description": "Download transformation results as CSV"
          }
        },
        {
          "name": "Download Transformation Results (Excel)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/transformation/download/{{transformation_id}}?format=excel",
              "host": ["{{base_url}}"],
              "path": ["transformation", "download", "{{transformation_id}}"],
              "query": [
                {
                  "key": "format",
                  "value": "excel"
                }  
              ]
            },
            "description": "Download transformation results as Excel"
          }
        },
        {
          "name": "Transformation Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/transformation/health",
              "host": ["{{base_url}}"],
              "path": ["transformation", "health"]
            },
            "description": "Check transformation service health"
          }
        }
      ]
    },
    {
      "name": "Data Reconciliation",
      "item": [
        {
          "name": "Process Reconciliation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"file_a_id\": \"{{file_id_a}}\",\n  \"file_b_id\": \"{{file_id_b}}\",\n  \"reconciliation_config\": {\n    \"name\": \"Bank vs Internal Reconciliation\",\n    \"description\": \"Match bank statements with internal records\",\n    \"matching_criteria\": [\n      {\n        \"field_a\": \"transaction_id\",\n        \"field_b\": \"reference_id\",\n        \"match_type\": \"exact\",\n        \"weight\": 0.4\n      },\n      {\n        \"field_a\": \"amount\",\n        \"field_b\": \"value\", \n        \"match_type\": \"tolerance\",\n        \"tolerance\": 0.01,\n        \"weight\": 0.4\n      },\n      {\n        \"field_a\": \"date\",\n        \"field_b\": \"transaction_date\",\n        \"match_type\": \"date\",\n        \"tolerance_days\": 1,\n        \"weight\": 0.2\n      }\n    ],\n    \"match_threshold\": 0.8,\n    \"auto_match\": true\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/reconciliation/process/",
              "host": ["{{base_url}}"],
              "path": ["reconciliation", "process"]
            },
            "description": "Process financial data reconciliation"
          }
        },
        {
          "name": "Get Reconciliation Results (Matched)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reconciliation/results/recon_example_123?category=matched&page=1&page_size=100",
              "host": ["{{base_url}}"],
              "path": ["reconciliation", "results", "recon_example_123"],
              "query": [
                {
                  "key": "category",
                  "value": "matched"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size", 
                  "value": "100"
                }
              ]
            },
            "description": "Get matched reconciliation records"
          }
        },
        {
          "name": "Get Reconciliation Results (Unmatched A)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reconciliation/results/recon_example_123?category=unmatched_a&page=1&page_size=100",
              "host": ["{{base_url}}"],
              "path": ["reconciliation", "results", "recon_example_123"],
              "query": [
                {
                  "key": "category",
                  "value": "unmatched_a"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size",
                  "value": "100"
                }
              ]
            },
            "description": "Get unmatched records from file A"
          }
        }
      ]
    },
    {
      "name": "Delta Generation",
      "item": [
        {
          "name": "Process Delta Generation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"file_a_id\": \"{{file_id_a}}\",\n  \"file_b_id\": \"{{file_id_b}}\",\n  \"delta_config\": {\n    \"name\": \"Trade File Delta\",\n    \"description\": \"Compare old vs new trade files\",\n    \"key_columns\": [\"trade_id\", \"account\"],\n    \"compare_columns\": [\"status\", \"amount\", \"settlement_date\"],\n    \"ignore_columns\": [\"last_modified\", \"process_timestamp\"]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/delta/process/",
              "host": ["{{base_url}}"],
              "path": ["delta", "process"]
            },
            "description": "Generate delta between two file versions"
          }
        },
        {
          "name": "Get Delta Results",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/delta/results/delta_example_123?category=changed&page=1&page_size=100",
              "host": ["{{base_url}}"],
              "path": ["delta", "results", "delta_example_123"],
              "query": [
                {
                  "key": "category",
                  "value": "changed"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size",
                  "value": "100"
                }
              ]
            },
            "description": "Get delta results by category (unchanged, changed, deleted, new)"
          }
        }
      ]
    },
    {
      "name": "AI Assistance",
      "item": [
        {
          "name": "Generate Regex Pattern",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Extract email addresses from text\",\n  \"examples\": [\n    \"john.doe@example.com\",\n    \"jane.smith@company.org\",\n    \"user123@domain.co.uk\"\n  ],\n  \"context\": \"Customer data extraction from free-form text fields\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/ai-assistance/generate-regex/",
              "host": ["{{base_url}}"],
              "path": ["ai-assistance", "generate-regex"]
            },
            "description": "Generate regex pattern using AI"
          }
        },
        {
          "name": "Analyze Data Structure",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"file_id\": \"{{file_id_a}}\",\n  \"analysis_type\": \"structure\",\n  \"sample_size\": 100\n}"
            },
            "url": {
              "raw": "{{base_url}}/ai-assistance/analyze-data/",
              "host": ["{{base_url}}"],
              "path": ["ai-assistance", "analyze-data"]
            },
            "description": "Analyze data structure using AI"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set dynamic timestamps",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript", 
        "exec": [
          "// Common test assertions",
          "pm.test('Status code is 200', function () {",
          "    pm.response.to.have.status(200);",
          "});",
          "",
          "pm.test('Response has success field', function () {",
          "    const jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('success');",
          "});",
          "",
          "// Auto-extract IDs from responses",
          "if (pm.response.json().data) {",
          "    const data = pm.response.json().data;",
          "    ",
          "    if (data.file_id) {",
          "        pm.globals.set('file_id_a', data.file_id);",
          "    }",
          "    ",
          "    if (data.transformation_id) {",
          "        pm.globals.set('transformation_id', data.transformation_id);", 
          "    }",
          "    ",
          "    if (data.reconciliation_id) {",
          "        pm.globals.set('reconciliation_id', data.reconciliation_id);",
          "    }",
          "}"
        ]
      }
    }
  ]
}